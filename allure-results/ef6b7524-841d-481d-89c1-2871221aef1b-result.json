{"name":"profileExistTest","status":"skipped","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"\nCan inject only one of <ITestContext, XmlTest> into a @BeforeTest annotated setup.\nFor more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection","trace":"org.testng.TestNGException: \nCan inject only one of <ITestContext, XmlTest> into a @BeforeTest annotated setup.\nFor more information on native dependency injection please refer to https://testng.org/doc/documentation-main.html#native-dependency-injection\r\n\tat org.testng.internal.Parameters.checkParameterTypes(Parameters.java:439)\r\n\tat org.testng.internal.Parameters.createParametersForMethod(Parameters.java:353)\r\n\tat org.testng.internal.Parameters.createParameters(Parameters.java:708)\r\n\tat org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:168)\r\n\tat org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)\r\n\tat org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:637)\r\n\tat org.testng.TestRunner.beforeRun(TestRunner.java:627)\r\n\tat org.testng.TestRunner.run(TestRunner.java:589)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:377)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:276)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1134)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1063)\r\n\tat org.testng.TestNG.run(TestNG.java:1031)\r\n\tat org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)\r\n\tat org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)\r\n\tat org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1675479684050,"stop":1675479684051,"uuid":"ef6b7524-841d-481d-89c1-2871221aef1b","historyId":"b851222483cd4879d086d710098d504","fullName":"com.BookingPOM.tests.BookAhotelTest.profileExistTest","labels":[{"name":"package","value":"com.BookingPOM.tests.BookAhotelTest"},{"name":"testClass","value":"com.BookingPOM.tests.BookAhotelTest"},{"name":"testMethod","value":"profileExistTest"},{"name":"parentSuite","value":"Default suite"},{"name":"suite","value":"Default test"},{"name":"subSuite","value":"com.BookingPOM.tests.BookAhotelTest"},{"name":"host","value":"Riya-15I93LU"},{"name":"thread","value":"15344@Riya-15I93LU.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"US - 101: Create checkout functionality "},{"name":"epic","value":"Epic - 100: Design booking hotel application"}],"links":[]}